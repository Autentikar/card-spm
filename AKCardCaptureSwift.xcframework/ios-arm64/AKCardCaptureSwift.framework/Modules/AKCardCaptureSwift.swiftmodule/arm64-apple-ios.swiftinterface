// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AKCardCaptureSwift
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AKCardCaptureSwift
import AKCoreSwift
import AVFoundation
import Foundation
import Swift
import UIKit
import Vision
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers public class CardCaptureCustomization : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public var backgroundColor: UIKit.UIColor {
    @objc get
    @objc set
  }
  @objc public var textColor: UIKit.UIColor {
    @objc get
    @objc set
  }
  @objc public var cardRecapture: UIKit.UIImage {
    @objc get
    @objc set
  }
  @objc public var buttonCustomization: AKCardCaptureSwift.CardCaptureCustomization.Button {
    @objc get
    @objc set
  }
  @objc public var loadingScreenCustomization: AKCardCaptureSwift.CardCaptureCustomization.LoadingScreen {
    @objc get
    @objc set
  }
  @objc @_inheritsConvenienceInitializers public class Button : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc public var backgroundColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc public var disableBackgroundColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc public var disableTextColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc public var textColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc deinit
  }
  @objc @_inheritsConvenienceInitializers public class LoadingScreen : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc public var showLogo: Swift.Bool {
      @objc get
      @objc set
    }
    @objc public var logo: UIKit.UIImage {
      @objc get
      @objc set
    }
    @objc public var showBackgroundImage: Swift.Bool {
      @objc get
      @objc set
    }
    @objc public var backgroundImage: UIKit.UIImage {
      @objc get
      @objc set
    }
    @objc public var backgroundColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc public var textColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc public var activityViewColor: UIKit.UIColor {
      @objc get
      @objc set
    }
    @objc deinit
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class AKStepCardCaptureViewController : AKCoreSwift.AKBaseCaptureViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class AKCardCapture : ObjectiveC.NSObject {
  @objc public static func setCustomization(customization: AKCardCaptureSwift.CardCaptureCustomization)
  @objc public static func getProtocol() -> any AKCoreSwift.AKStepSharedRouterProtocol
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIImage {
  public var PNGBase64: Swift.String {
    get
  }
}
